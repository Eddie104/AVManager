<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%"
		 creationComplete="onCreationCompleteHandler(event)">
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.events.ResizeEvent;
			
			import org.avManager.events.ActressEvent;
			import org.avManager.model.ActressManager;
			import org.avManager.model.data.ActressData;
			import org.avManager.view.UIManager;
			import org.libra.log4a.Logger;
			
			private static const TOTAL_NUM:int = 60;
			
			private static const GAP_X:int = 102;
			
			private static const GAP_Y:int = 152;
			
			[Bindable]
			private var _curPage:int = 0;
			
			[Bindable]
			private var _totalPage:int = 0;
			
			private var _curHtmlPage:int = 1;
			
			private var _actressList:Array;
			
			private var _curActressIndex:int = 0;
			
			private var _actressData:ActressData;
			
			private var _actressCellList:Vector.<ActressPreviewCell>;
			
			private var _curCols:int = 0;
			
			private var _actressDataList:Vector.<ActressData>;
			
			[Bindable]
			private var _cupData:ArrayCollection = new ArrayCollection(["A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "ALL"]);
			
			[Bindable]
			private var _heightData:ArrayCollection = new ArrayCollection(["0-150", "150-160", "160-170", "170-180", "180-200", "ALL"]);
			
			[Bindable]
			private var _sortData:ArrayCollection = new ArrayCollection(["评分", "DMM排名", "默认"]);
			
			public function updateActressList(list:Vector.<ActressData>):void{
				this._actressDataList = list;
				if(_curPage < 0)
					_curPage = 1;
				_totalPage = Math.ceil(this._actressDataList.length / TOTAL_NUM);
				this.updatePage();
			}
			
			private function onPrevPageHandler(event:MouseEvent):void
			{
				if(this._curPage > 1){
					--this._curPage;
					updatePage();
				}
			}
			
			private function onNextPageHandler(event:MouseEvent):void
			{
				if(this._curPage < this._totalPage){
					++this._curPage;
					updatePage();
				}
			}
			
			protected function onUpdateActressListHandler(event:MouseEvent):void
			{
				var urlLoader:URLLoader = new URLLoader();
				urlLoader.load(new URLRequest("http://avdb.im/actor/currentPage/" + _curHtmlPage));
				urlLoader.addEventListener(Event.COMPLETE, onLoadHtmlCompleted);
				urlLoader.addEventListener(IOErrorEvent.IO_ERROR, onIOError);
			}
			
			protected function onLoadHtmlCompleted(event:Event):void
			{
				var urlLoader:URLLoader = event.target as URLLoader;
				urlLoader.removeEventListener(Event.COMPLETE, onLoadHtmlCompleted);
				urlLoader.removeEventListener(IOErrorEvent.IO_ERROR, onIOError);
				this.getActressListFromHtml(urlLoader.data);
			}
			
			protected function onIOError(event:IOErrorEvent):void
			{
				var urlLoader:URLLoader = event.target as URLLoader;
				urlLoader.removeEventListener(Event.COMPLETE, onLoadHtmlCompleted);
				urlLoader.removeEventListener(IOErrorEvent.IO_ERROR, onIOError);
				Alert.show(event.text);
			}
			
			private function getActressListFromHtml(data:String):void
			{
				//只获取有头像的演员信息
				_actressList = data.match(/<a href="\/star\/\w+"><img.*jpg" title=".*" class="avatar"><\/a>/g);
				_curActressIndex = 0;
				getNextActress(_curActressIndex);
				
//				if(data.indexOf("今村楓") == -1){
//					Logger.info(_curHtmlPage + "完成了，开始下一页");
//					if(++_curHtmlPage <= 3000){
//						this.onUpdateActressListHandler(null);
//					}else{
//						Logger.info("ok le");
//					}
//				}else{
//					trace("_curHtmlPage = " + _curHtmlPage);
//				}
			}
			
			private function getNextActress(index:int):void{
				if(index < _actressList.length){
					var actressHtml:String = _actressList[index];
					var id:String = actressHtml.match(/\/star\/\w+/)[0];
					var name:String = actressHtml.match(/title=".*" class/)[0].replace("title=\"", "").toString().replace("\" class", "");
					_actressData = ActressManager.instance.createActress(name, id.replace("/star/", ""));
					if(_actressData.needInsert || !_actressData.portrait){
						// 开始获取每一个演员的数据
						var urlLoader:URLLoader = new URLLoader();
						urlLoader.load(new URLRequest("http://avdb.im" + id));
						urlLoader.addEventListener(Event.COMPLETE, onLoadActressDataCompleted);
					}else{
						_curActressIndex =_curActressIndex + 1;
						Logger.info("好了，开始下一个" + _curActressIndex);
						getNextActress(_curActressIndex);
					}
				}else{
					Logger.info(_curHtmlPage + "完成了，开始下一页");
					if(++_curHtmlPage <= 660){
						this.onUpdateActressListHandler(null);
					}else{
						Logger.info("ok le");
					}
				}
			}
			
			protected function onLoadActressDataCompleted(event:Event):void
			{
				var urlLoader:URLLoader = event.target as URLLoader;
				urlLoader.removeEventListener(Event.COMPLETE, onLoadActressDataCompleted);
				
				var data:String = urlLoader.data;
				data = data.match(/<div id="waterfall">\s*.*<\/div><\/div>/)[0];
				var a:Array = data.match(/http:.*jpg/);
				if(a && a.length > 0)
					_actressData.setPortraitURL(a[0]);
				var ary:Array = data.match(/<p>.*<\/p>/)[0].replace(/<\/?p>/g, ",").toString().split(",");
				var l:int = ary.length;
				for(var i:int = 0;i < l;i++){
					data = ary[i];
					if(data){
						if(data.indexOf("作品") > -1){
//							_spiderActressData.worksCount = int(data.match(/\d+/)[0]);
						}else if(data.indexOf("生日") > -1){
							a = data.match(/\d{4}-\d{2}-\d{2}/)[0].split("-");
							_actressData.birthday = new Date(a[0], a[1], a[2]);
//							var year:int = int(_spiderActressData.birthday.split("-")[0]);
//							_spiderActressData.age = _year - year;
						}else if(data.indexOf("星座") > -1){
//							_spiderActressData.constellation = data.split(": ")[1];
						}else if(data.indexOf("身高") > -1){
							_actressData.height = data.match(/\d+/)[0];
						}else if(data.indexOf("罩杯") > -1){
							_actressData.cup = data.match(/\w+/)[0];
						}else if(data.indexOf("胸围") > -1){
							_actressData.bust = data.match(/\d+/)[0];
						}else if(data.indexOf("腰围") > -1){
							_actressData.waist = data.match(/\d+/)[0];
						}else if(data.indexOf("臀围") > -1){
							_actressData.hip = data.match(/\d+/)[0];
						}
					}
				}
				_curActressIndex =_curActressIndex + 1;
				Logger.info("好了，开始下一个" + _curActressIndex);
				getNextActress(_curActressIndex);
			}
			
			protected function onCreationCompleteHandler(event:FlexEvent):void
			{
				_cupComboBox.textInput.editable = false;
				_cupComboBox.selectedIndex = _cupData.length - 1;
				
				_heightComboBox.textInput.enabled = false;
				_heightComboBox.selectedIndex = _heightData.length - 1;
				
				_sortComboBox.textInput.enabled = false;
				_sortComboBox.selectedIndex = 0;
					
				this.addEventListener(Event.RESIZE, onResize);
				
				_actressCellList = new Vector.<ActressPreviewCell>(TOTAL_NUM);
				var cell:ActressPreviewCell;
				for(var i:int = 0;i < TOTAL_NUM; i++){
					cell = new ActressPreviewCell();
					_actressCellList[i] = cell;
					this._container.addElement(cell);
					cell.addEventListener(MouseEvent.CLICK, onCellClicked);
					cell.addEventListener(ActressEvent.DELETED, onDeletedActressEvent);
				}
				onResize(null);
			}
			
			private function onResize(event:ResizeEvent):void
			{
				const cols:int = int(this.width / GAP_X);
				if(_curCols != cols){
					_curCols == cols;
					var cell:ActressPreviewCell;
					for(var i:int = 0;i < TOTAL_NUM; i++){
						cell = _actressCellList[i];
						cell.x = (i % cols) * GAP_X;
						cell.y = int(i / cols) * GAP_Y;
					}
				}
			}
			
			private function updatePage():void{
				if(this._curPage > this._totalPage) this._curPage = this._totalPage;
				if(this._curPage < 1) this._curPage = 1;
				var startIndex:int = (this._curPage - 1) * TOTAL_NUM;
				var endIndex:int = startIndex + TOTAL_NUM - 1;
				if(endIndex >= this._actressDataList.length){
					endIndex = this._actressDataList.length - 1
				}
				var index:int = 0;
				for(var i:int = startIndex; i<= endIndex; i++){
					this._actressCellList[index++].actressData = this._actressDataList[i];
				}
				for(; index < TOTAL_NUM;index++){
					this._actressCellList[index].actressData = null;
				}
			}
			
			protected function onCellClicked(event:MouseEvent):void
			{
				var cell:ActressPreviewCell = event.currentTarget as ActressPreviewCell;
				UIManager.instance.showActressDetailFrame(cell.actressData);
			}
			
			private function filter(event:Event = null):void{
				var list:Vector.<ActressData> = ActressManager.instance.filter(_keyNameInput.text, _cupData.getItemAt(_cupComboBox.selectedIndex).toString(), _heightData.getItemAt(_heightComboBox.selectedIndex).toString());
				if(_sortComboBox.selectedIndex == 0){
					list.sort(function(a:ActressData, b:ActressData):int{
						if(a.score < b.score) return 1;
						if(a.score > b.score) return -1;
						return 0;
					});
				}else if(_sortComboBox.selectedIndex == 1){
					list.sort(function(a:ActressData, b:ActressData):int{
						if(a.rank == 0 && b.rank > 0){
							return 1;
						}else if(a.rank != 0 && b.rank == 0){
							return -1;
						}
						if(a.rank < b.rank) return -1;
						if(a.rank > b.rank) return 1;
						return 0;
					});
				}
				this.updateActressList(list);
			}
			
			protected function onUpdateActressScoreHandler(event:MouseEvent):void
			{
				UIManager.instance.showDmmRankParser();
			}
			
			protected function onDeletedActressEvent(event:Event):void
			{
				filter();
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<s:HGroup width="100%" height="24" horizontalAlign="left">
		<s:HGroup width="100%" height="24" horizontalAlign="left">
			<s:Button label="更新" click="onUpdateActressListHandler(event)"/>
			<s:Button label="更新演员分数" click="onUpdateActressScoreHandler(event)"/>
			<s:Label height="100%" text="关键字搜索:" verticalAlign="middle"/>
			<s:TextInput id="_keyNameInput" prompt="演员姓名关键字" change="filter(event)"/>
			<s:Label height="100%" text="罩杯:" verticalAlign="middle"/>
			<s:ComboBox id="_cupComboBox" width="56" change="filter(event)" dataProvider="{_cupData}"/>
			<s:Label height="100%" text="身高:" verticalAlign="middle"/>
			<s:ComboBox id="_heightComboBox" width="80" change="filter(event)" dataProvider="{_heightData}"/>
		</s:HGroup>
		<s:HGroup width="100%" height="24" horizontalAlign="right">
			<s:ComboBox id="_sortComboBox" width="56" dataProvider="{_sortData}" labelField="@label" change="filter(event)"/>
			<s:Button width="70" height="100%" label="上一页" click="onPrevPageHandler(event)"/>
			<s:Label width="48" height="100%" text="{_curPage + '/' + _totalPage}" textAlign="center" verticalAlign="middle"/>
			<s:Button label="下一页" width="70" height="100%" click="onNextPageHandler(event)"/>
		</s:HGroup>
	</s:HGroup>
	<s:Scroller width="100%" height="100%">
		<s:Group width="100%" height="100%" id="_container"/>
	</s:Scroller>
</s:VGroup>
